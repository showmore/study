/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2018-12-26 10:11:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Login Page</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<form id=\"loginform\" action=\"");
      out.print(request.getContextPath());
      out.write("/login.udo\">  \r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t\t<table style=\"margin:280px auto; padding: 50px; border: 1px #ccc solid; width: 400px;\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: right;\">用户名：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left;\"><input type=\"text\" id=\"username\" name=\"username\" value=\"\"/></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: right;\">密码：</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: left;\"><input type=\"text\" name=\"identity\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=2 style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"expiredays\" value=\"7\" />记住一周  <br>\r\n");
      out.write("\t\t\t\t    <input type=\"radio\" name=\"expiredays\" value=\"30\" />记住一月 <br>\r\n");
      out.write("\t\t\t\t\t<input type=\"radio\" name=\"expiredays\" value=\"100\" />永远记住  <br>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=2 style=\"text-align: center; padding-top:10px;\"><input type=\"submit\" value=\"登陆\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=2 style=\"text-align: center; padding-top:10px;\">\r\n");
      out.write("\t\t\t\t\t\t");
 if(request.getAttribute("note")!=null) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<span style=\"color:red;font-weight:bolder;\">");
      out.print(request.getAttribute("note") );
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\twindow.onload=function(){\r\n");
      out.write("\t\tvar form = document.getElementById(\"loginform\");\r\n");
      out.write("\t\tvar username = document.getElementById(\"username\");\r\n");
      out.write("\t\tif(getCookie(\"userKey\")!=\"\" && getCookie(\"userKey\")!= null && getCookie(\"ssid\")!= \"\" && getCookie(\"ssid\")!= null){\r\n");
      out.write("\t\t\tusername.value = getCookie(\"userKey\"+\"=\");\r\n");
      out.write("\t\t\t//form.submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tfunction setCookie(c_name, c_value, c_expiredays){ //expiredays单位是天\r\n");
      out.write("\t\tvar expires = \"\";\r\n");
      out.write("\t\tif(c_expiredays!=null){\r\n");
      out.write("\t\t\tvar sysDate = new Date();\r\n");
      out.write("\t\t\t//alert(sysDate.toUTCString());\r\n");
      out.write("\t\t\tsysDate.setDate(sysDate.getDate()+c_expiredays);\r\n");
      out.write("\t\t\t//alert(sysDate.toUTCString());\r\n");
      out.write("\t\t\texpires = \";expires\" + sysDate.toUTCString();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tdocument.cookie= c_name +\"=\"+escape(c_value)+expires;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction getCookie(c_name){\r\n");
      out.write("\t\tif(document.cookie.length>0){\r\n");
      out.write("\t\t\tvar start = document.cookie.indexOf(c_name+\"=\");\r\n");
      out.write("\t\t\tstart = start + c_name.length + 1;\r\n");
      out.write("\t\t\tvar end = document.cookie.indexOf(\";\", start);\r\n");
      out.write("\t\t\tif(end==-1) end = document.cookie.length;\r\n");
      out.write("\t\t\tvar val = document.cookie.substring(start,end);\r\n");
      out.write("\t\t\treturn unescape(val);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tfunction deleteCookie(c_name){\r\n");
      out.write("\t\tvar sysDate = new Date();\r\n");
      out.write("\t\tsysDate.setDate(sysDate.getDate()-1);\r\n");
      out.write("\t\tvar time = \";expires=\"+sysDate.toUTCString();\r\n");
      out.write("\t\tvar val = getCooke(c_name);\r\n");
      out.write("\t\tdocument.cookie = c_name +\"=\"+escape(val)+expires;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//setCookie(\"ssid\",\"abc\",1);\r\n");
      out.write("\t//alert(document.cookie);\r\n");
      out.write("\t//alert(getCookie(\"ssid\"));\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
